package cn.p2.wrapper.demo;

public class WrapperDemo
{

	public static void main(String[] args)
	{
		/*
		 * 基本数据类型对象包装类。
		 * 为了方便操作基本数据类型值，将其封装成了对象，在对象中定义了属性和行为丰富了该数据的操作。
		 * 用于描述该对象的类就成为基本数据类型对象包装类。
		 * 
		 * byte  Byte
		 * short  Short
		 * int    Integer
		 * long   Long
		 * float  Float
		 * double Double
		 * char   Character
		 * boolean  Boolean
		 * 
		 * 基本类型--》字符串
		 *     1.基本类型数值+“”
		 *     2.用String类中的静态方法valueOf(基本类型数值)
		 * 
		 * 字符串--》基本类型
		 *     1.使用包装类中的静态方法 xxx parseXxx("xxx类型的字符串")
		 *       int parseInt("int String");
		 *       long parseLong("long String");
		 *       Boolean parseBoolean("boolean String");
		 *     只有character类型没有这种parse方法
		 * 
		 */
		int num;
		
		System.out.println(Integer.MAX_VALUE);
		System.out.println(Integer.MIN_VALUE);
		
		System.out.println(Integer.toBinaryString(-6)); // 负数的二进制等于正数取反再加一
		
		int num1 = 4;
		Integer i = new Integer(num1);
		System.out.println(i);
		
		int x = Integer.parseInt("123");
		System.out.println(x);
		
		if(Boolean.parseBoolean("true"))
			System.out.println("true");

	}

}
